hft is the ftc project with HTML5/javascript. I have been using silverlight
when implementing ftc. Now I realized HTML5 becomes as powerful.
starting 2012-11-03
---------

2012-12-01
I have downloaded many books, after reading some of them about js frameworks
my thoughts:

front end: 
 - jquery is the basic. I will use it
 
 - backbone model lib offers model, collection. I will use it
   backbone's safe, fetch: I have to learn to customize them, to fit it
   into couchDB's API
   
 - knockout viewModel/View is the best, I will use it with 
   backbone model/collection, may be also its routers
   
back end: couchDB/couchApp has a API saveDoc, getDoc 
that are enough for me to start. I may later try to use total couchApp, or
try to see about couchbase's server offer

I need to write a python script to generate the initial DB on couchDB, so that
the client can load it and start the app.
   
I will use contacts-example-src as ref app, to
1. load the list of docs
2. 2nd view for login

2012-12-16
----------
For create the initial db 
    python makeinitialdb.py
the db has an initial person with dob='19661216', login acct (A1 inst)
with username='admin' and password='password'

Plan: write a view that gets a list of docs keyed by fid
so that client side store.js will parse the list into models -
epool/rpool 


2012-12-16 =============================================================
1. creation of the app and its directory
----------------------------------------
cd hft
    couchapp generate hftapp
this created a directory hftapp

2. push the db
--------------
I edited .couchappignore, have the 2 lines:
    [
    ...
    ".*\\.cmd$",
    ".*\\.txt$",
    ".*\\.log$"
    ]
at the end. This means, all files with .log and .txt will not be pushed
onto the db

    cd htfapp
    couchapp push hdb   // this push the app into a db named hdb
in file _id, I have
    _design/hftapp
this makes sure that the design doc is
    _design/hftapp

3. generate a view
-------------------
  cd ..     //  1 level above hftapp
run
  couchapp generate view hftapp byname
this generated 2 javascript files: map.js and reduce.js:
  hftapp\views\byname\map.js
  hftapp\views\byname\reduce.js  


4. using .couchapprc
--------------------
    {
        "env": {
            "default": {
                "db": "http://localhost:5984/hdb1"
            }
        }
    }
then I just do
    cd hftapp
    push

5. made it so far to load:
--------------------
cd  hftapp
couchapp push
http://localhost:5984/hftdb/_design/hftapp/index.html
       
 
2012-12-27
------------
About the semantics of ids
1. _id of every entity
contains 17 random chars + 'T' + creation time in terms of milsecs 
since 1970.

2. session (SE)
- _id: the same of(17+'T'+ milsecs)-> 31 chars, with time-stamp in it
- fid,  
- usrid: login-usr A1._id, 
- cid: SE
- expire: update to NOW with every activity of the logged-in user
- state (0: dead, 1: alive) - cron-timer check NOW against expire-time
  Session objs will not be deleted/purged

3. TX obj
_id is session._id + vid, which is a counter within the session
TX also has fid, cid:TX

4 Classes so far
-----------------
base: 
    cid:<_cid>, 
    id:<_id>,     # if vid used, id + '_<vid>'
    fid:<_fid>,
    tx:<_tx>, 
    vid:<_vid>,    # SE, RL and F1 does not use vid. in DB vid is part of _id
    rev:<_rev>,    # generated by couchDB
    conts:[]}   # not in DB

SE(base):    # Session. no (vid,tx), id==_id
    {cid:'SE', 
    usrid:<P1._id>,
    expire:<30min later>, 
    state:<0|1>}

TX:            # transaction
    {cid:'TX',
    fid:
    id:    SE.id
    vid:,    # tx-count within the session
    _id: id+'_<vid>}
----------------------------------------------------
getter/setter are in format of name()/name(vname)
----------------------------------------------------
F1(base):    # family tree, _id is sys-generated 7 chars
    cid:'F1',
    name:,    # name of the ft. getter/setter: name()/name(v)
    synop:,    # description
    lastupdate:,# 13 digits milsec of last modified time
    
    # conts will be created by RLs. not saved in DB
    conts:[ 'peoeple',    # all P1 entities in this family-tree
            'logins']    # all ftc-login accounts

P1(base):    # person
    cid: 'P1'
    dob: <day of birth> # 19551216
    dod: date of death
    sex: male|female
    synop: <description>

    # conts will be created by RLs. not saved in DB
    conts:[ 'names',
            'accoutns',
            'emails']

B1(base):    # spousal bond
    cid: 'B1'
    type: 'single'|'married'|'patner'|'departed'
    synop:
    uday: date of union

RL(base):    # eid = _id, no vid
    cid: 'RL'
    leid: <eid> of left entity
    reid: <eid> of right entity
    lconts:[<container names of l-entity>]
    rconts:[<container name of r-entity>]

A1(base):    # login account
    cid:'A1',
    usrname:<usrname>,    # ft login name, user id
    password:<pwd>,        # password for login
    ucode:<ucode>        # roll of user(f-admin, user, super-admin)

T1(base):    # title/name of a person
    cid:'T1',
    type:,    # legal name, nick name, English name,...
    given:,    # first name
    middle:,# mmiddle name
    family:<family name>}

E1(base):    # email
    cid:'E1',
    title:,    # work email, used for online shopping,...
    type: desktop PC email, web email, blackBerry, iPhone email,...
    address: abc@heaven.com}

BC(base):    # bonds configuration
    cid: 'BC',
    rootb1eid: the of B1 that is tree-root
    
    # every B1 entity
    b1scs:[ # every B1 entity has a list element - doc
            {b1eid:    # eid of B1
            mad:    # male anchor distance-index (0,1,..)
            fad:    # female anchor distance index (0,1,..)
            anchorsex:# sex of anchor (male|female)
            show:    # if children group expanded (1|0)
            },]        # list of all B1 enitities

RS(base):    # system graphic resource. can be icon, image
    cid:     'RS'
    name:     file location/path
    mime:    image/png
    width:    32 px
    height:    32 px

TH(base):    # theme
    cid:'TH'
    name:    # name of the theme
    settings: # dictionary of all them-settings
 
IP(base):   # info-pane
    cid: IP
    name: name of the ip
    title:  tooltip pop up, locale subject

A2(base):   # bank account
    cid: A2
    type: checking|saving|..
    title: how the user/owner call it
    ID_dict: dictionary collecting all identifying k:v
    credential_dict: user credential for identifying him/herself
    synop:
    
CE(base):   # chronology-entry
    cid: CE
    title: how is the entry shown as (link)
    date: event date
    synop:
    
20130218
--------------
After a week of GUI effort in TX
I am starting integration into hftapp. I saved the previous hft->hft20130218

20130223 - version 0.1.2 published:
----------------------------------
c:\Users\jianchi\Google Drive\lab\hft001>pushpublic.cmd

c:\Users\jianchi\Google Drive\lab\hft001>couchapp push . http://ftc.iriscouch.co
m/hft012
2013-02-23 19:43:34 [INFO] Visit your CouchApp here:
http://ftc.iriscouch.com/hft012/_design/hftapp/index.html

c:\Users\jianchi\Google Drive\lab\hft001>

20130224 0.1.2a
----------------
figured out a bit about couchapp.
1.
in the vendor\couchapp\_attachment\loader.js
it loads:
  "/_utils/script/sha1.js",
  "/_utils/script/json2.js",
  "/_utils/script/jquery.js",
  "/_utils/script/jquery.couch.js",
  "vendor/couchapp/jquery.couch.app.js",
  "vendor/couchapp/jquery.couch.app.util.js",
  "vendor/couchapp/jquery.mustache.js",
  "vendor/couchapp/jquery.evently.js"
  
I think I only need
  "/_utils/script/jquery.couch.js",
  "vendor/couchapp/jquery.couch.app.js",
  "vendor/couchapp/jquery.couch.app.util.js",
So I put these 3 lines directly into my index.html for imports
removed loader.js

2.
in init.js, the line  
    var db = jquery.couch.db("hftdb");
has problem. Changed to 
    var db = $.couch.db("hftdb");
then it works - my page load correctly with tabs

20130224b 0.1.3
----------------
Got db/store working: parsed db data into store. data made by makeinitaldb.py
jquery 1.9 removed $.browser, which caused error when run db.view(..) call.
Googled: 1.8 should still support it. So I downloaded 1.8.3 and put it
  hft001/_attachments/js/jquery.js
But after this, I still have error in /_utils/script/jquery.couch.js which
is on DB server:
 c:/Program Files (x86)/Apache Software Foundation/CouchDB/share/couchdb/www/script/..
I copied this under hft001/_attachments/js/jquery.couch.js to debug, but
the error disappeared. Maybe the jquery 1.9 was still in browser cache?
Anyways, I have it now working.
I then also removed
  vendor/couchapp/mustache.js
  vendor/couchapp/pathfinder.js
  vendor/couchapp/evently.js
it did not seem to hurt

Maybe one day, couchapp's jquery.couch.js stops using $.browser.msie
which is offered by jquery version < 1.9, but for now I have to use 1.8.

Since this is not visible on GUI, I did not push onto ftc.iriscouch.com

2013-02-28 - 0.1.4
--------------------
was trying to solve the problem of couchDB viw login
which is a get query. It seemed to me, using parameter on
 hftapp/login?key=%22G8FVL9L%22
wouldn't work. It can only be without any parameters. just
 hftapp/login
Can couchDB do better?
Also tried to use log on server side: in login/map.js:
 log("....");
but it seems that some cache behavior makes it more difficult. It seems
unpredictable when the log would take effect
 c:\Apache Software Foundation\CouchDB\var\log\couchdnb\couch.log
after set [debug] to be on debug level in
 c:\Apache Software Foundation\CouchDB\etc\couch\local.ini
Have to restart couchDB service, still not feeling sure when the log
will take effect.
I am thinking to stop using couchDB, turn to MogoDB or some other NoSQL DB
couch is just not so predictable.
Also, in FD.db.view("<url>", function(data){
 success: function()..})
if it returns true/false, the returned value does not work:
 var v = request_login(..)
Better to assign FD.loggedin = true/false
using global value in stead of return value in context of this Ajax callback,
seems to be better predictable. My confidence on CouchDB is getting weaker.

It is getting worse with couchdb. Maybe it is browser-acahce issue?
login is not predictable! Somtimeslogin view just fail. This is not acceptable.
Should I use MongoDB in stead?

2013-03-02 0.1.4a   
-----------------
It is pain to know when the load view is hit
Now I just load the data at initial page load into FD.data, and when login, 
test credentail and if positive, parse the data into store.
This works for now. I know it is stupid to keep raw data of that much,... But.

2013-03-02
--------------------------------------------------------------------------------
Have to define initial data (DB inital content)

Mnnnn system:
-----------
M0000-M0999 general purpose
MC000-MC999 collection with no dedication yet

M1nnn used on title bar
M1000-M1499 used on title-bar (non-popups)
M1500-M1999 used on tiotle bar pop-ups

M3nnn used on ft-graph/canvas
M3000-M3499 on non-popups
M3500-M3999 on ft-graph opoups

M4nnn used in family bulletin

M5nnn used in about

M7nnn used person pane
M7000-M7499 non-opo-ups
M7500-M7999 pop ups
----------------------------
MC010: change password
MC011: old password
MC012: new password
MC013: confirm password
MC014: update
MC015: upload
MC016: account details
MC018: upload successful
MC019: next
MC020: date
MC021: delete
MC022: email
MC023: history
MC024: search
MC025: log
MC026: exit
MC027: save
MC028: close
MC029: Document details
MC030: previous
MC031: file name
MC032: photo
MC033: text
MC034: system setting
MC035: name
MC036: time
MC037: address
MC038: previous
MC039: previous
MC040: previous
MC059: Category
MC060: Access control
MC061: All family member
MC062: Some members(s) of family
MC063: Me only
MC064: Password controlled
MC065: Description
MC066: New info board


M0000: general purpose. yes
M0001: general purpose. no
M0002: general purpose. ok
M0003: general purpose. cancel
M0005: general purpose. error


M1501: titlebar - popup. login dialog: userid label/UserID
M1502: titlebar - popup. button face: login/Log in
M1503: titlebar - popup. error message: login failed.
M1504: titlebar - popup. password label.

M1000: titlebar. logo text: FTC
M1001: titlebar. button face: sign in/Sign in
M1002: titlebar. logout button face: logout

M3001: fgraph. tab title: Family tree

M4001: fbuletin. tab title: Family bulletin

M5001: fabout. tab title: About FTC

M7001: info pane. Life chronicle
M7002: Photo albums
M7003: places
M7004: collections
M7005: Hobbies
M7006: readings
M7007: writings
M7008: important people
M7009: Correspondences
M7010: cars
M7011: pets
M7012: jobs
M7013: goal and plans
M7014: accounts
M7015: titles and names

2013-03-03 0.1.4b changed Mnnn system


cid #   eid(py) RL#  leid-p1eid    lconts      rcounts  comments
--------------------------------------------------------------------------------
F1  #1  FID                                             family obj
P1  #2  p1eid   #3   FID-p1eid     people               person-1
IP  #4  ip1eid  #5   p1eid-ip1eid  ips                  accounts (M0058)
A1  #6  a11eid  #7   p1eid-a11eid  accounts             p1.accounts:[a11,...]
IP  #8  ip2eid  #9   p1eid-ip2eid  ips                  title
T1  #10 t1eid   #11  p1eid-t1eid   names                titles in p1.names[]
E1  #12 e1eid   #13  p1eid-e1eid   emails               contained in ip1
B1  #14 b1eid   #15  b1eid-p1eid   children    parents  p1's parent-bond
BC  #16 bceid   #17  p1eid-bceid   bconfs               p1's bc(bond-configs)
TH  #18 th1eid  #19  p1eid-th1eid  themes               themes owned by p1 
IP  #20 ip3eid  #21  p1eid-ip3eid  ips                  ip for life chronicle
A2  #22 a21eid  #23  p1eid-a21eid  accounts
CE  #24 ce1eid  #25  p1eid-ce1eid  chrons

2013-03-07 0.1.4c
Updated basics.js to reflect the now 25 insts

